name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
        vscode-version: [stable]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Type check
      run: npm run type-check
    
    - name: Build extension
      run: npm run compile
    
    - name: Run unit tests
      run: npm run test:unit || echo "Tests not implemented yet"
    
    # Integration tests require display on Linux
    - name: Run integration tests (Linux)
      if: runner.os == 'Linux'
      uses: coactions/setup-xvfb@v1
      with:
        run: npm run test:integration || echo "Integration tests not implemented yet"
      env:
        VSCODE_VERSION: ${{ matrix.vscode-version }}
    
    - name: Run integration tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: npm run test:integration || echo "Integration tests not implemented yet"
      env:
        VSCODE_VERSION: ${{ matrix.vscode-version }}
    
    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --production
      continue-on-error: true # Don't fail on moderate vulnerabilities
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
    - name: Upload Snyk results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: snyk.sarif

  package:
    needs: [test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install -g @vscode/vsce
    
    - name: Package extension
      run: vsce package
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v3
      with:
        name: vsix-package
        path: '*.vsix'
        retention-days: 7
    
    - name: Validate VSIX
      run: |
        VSIX_FILE=$(ls *.vsix | head -n 1)
        echo "Created package: $VSIX_FILE"
        # Could add additional validation here